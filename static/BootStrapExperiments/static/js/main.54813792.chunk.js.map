{"version":3,"sources":["logo.svg","components/SampleComponent.js","components/SampleComponentCreateElement.js","components/SampleWithProps.js","components/ClickCounter.js","components/MyBootStrapNav.js","components/MyBootStrapDemo.js","components/MyBootStrapLayout.js","components/MyDataGrid.js","components/MyModalOkCancelDialog.js","components/MyModalDemo.js","components/BootstrapModal.js","components/MyBootstrapNavWithNavLink.js","components/UpDownCounter.js","App.js","reportWebVitals.js","index.js"],"names":["Component","MyBootStrapNav","className","to","MyBootStrapDemo","props","changeStateData","console","log","setState","userName","state","newItemText","updateNewTextValue","event","target","value","pendingTodoItems","todoItems","filter","t","done","OnCreateNewTodoClick","allItems","find","item","action","newItem","push","OnNewItemSubmit","preventDefault","OnDeleteClick","todo","window","alert","todoTableRows","map","type","checked","onChange","toggleTodo","onClick","existingItem","newDone","createStaticToDoItems","items","this","length","onSubmit","htmlFor","id","title","columns","field","headerName","width","description","sortable","valueGetter","params","getValue","MyDataGrid","selectedItems","dummyRows","populateDummyRows","rowCount","rows","index","newRow","lastName","firstName","age","nextProps","nextState","prevProps","prevState","selectedRow","data","isSelected","indexOf","splice","join","OnShowSelectedItems","style","pageSize","rowsPerPageOptions","checkboxSelection","autoHeight","rowHeight","onRowSelected","retval","MyModalOkCancelDialog","OnOkClick","ShowDialog","onClose","OnCancelClick","isOpen","isVisible","text","MyModalDemo","OnShowModalClick","existingState","isModalOpen","OnShowOkCancelReusableModalClick","isOkCancelModalOpen","OnModalCloseClick","OnOkCancelModalDialogCloseCallBack","BootstrapModal","OnShowSimpleModalClick","OnShowGridLayoutModalClick","isGridModalOpen","Modal","show","Header","Title","Body","Footer","Button","variant","aria-labelledby","closeButton","Container","Row","Col","xs","md","MyBootstrapNavWithNavLink","useState","links","renderNavLink","linkItem","activeClassName","UpDownCounter","initialValue","counter","setCounter","data-testid","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54813792.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2d27ead7.svg\";","import React, { Component } from 'react'\r\n\r\nclass SampleComponent extends Component\r\n{\r\n    render()\r\n    {\r\n        return <div>This is my <strong>sample</strong>  component</div>\r\n    }\r\n}\r\n\r\nexport default  SampleComponent\r\n\r\n\r\n","import React, { Component } from 'react'\r\n\r\nclass SampleComponentCreateElement extends Component\r\n{\r\n    render()\r\n    {\r\n        return React.createElement(\r\n            \"div\",\r\n            {\"id\":\"id001\"}, \r\n            React.createElement(\r\n                \"h1\",\r\n                null,\r\n                \"This is a h1 and was injected using CreateElement\"\r\n            )\r\n            );        \r\n    }\r\n}\r\n\r\nexport default  SampleComponentCreateElement\r\n\r\n\r\n","import React, { Component } from 'react'\r\n\r\nclass SampleWithProps extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n    }\r\n    render()\r\n    {\r\n        return <div>\r\n            This is my <strong>sample</strong>  component with \r\n            props.FirstName:<strong>{this.props.firstName}</strong>  and LastName:<strong>{this.props.lastName}</strong> </div>\r\n    }\r\n}\r\n\r\nexport default  SampleWithProps\r\n\r\n\r\n","import react from 'react'\r\nimport {Component} from 'react'\r\n\r\nclass ClickCounter extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state={counter:0};\r\n        this.onIncrementClickHandler=this.onIncrementClickHandler.bind(this);\r\n        this.onDecrementClickHandler=this.onDecrementClickHandler.bind(this);\r\n    }\r\n    onIncrementClickHandler()\r\n    {\r\n        console.log(\"got a click event- increment\");\r\n        let newCounter=this.state.counter+1;\r\n        this.setState({counter:newCounter});\r\n    }\r\n    onDecrementClickHandler()\r\n    {\r\n        console.log(\"got a click event - decrement\");\r\n        let newCounter=this.state.counter-1;\r\n        this.setState({counter:newCounter});\r\n    }\r\n    render()\r\n    {\r\n    const outerBoder={\r\n        'border-color':'blue', \r\n        'color':'red', 'border-width':'1', \r\n        'border-style':'solid', \r\n        'background-color':'yellow'\r\n    };\r\n    return <div style={outerBoder}>\r\n        You have clicked <strong>{this.state.counter}</strong> times\r\n        <button onClick={this.onIncrementClickHandler}>Increment. </button>;\r\n        <button onClick={this.onDecrementClickHandler}>Decrement. </button>;\r\n    </div>\r\n    \r\n    }\r\n}\r\n\r\nexport default ClickCounter;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass MyBootStrapNav extends Component {\r\n    render() {\r\n        return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <a className=\"navbar-brand\" to=\"/\">My company</a>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item active\">\r\n                    <Link className=\"nav-link\" to=\"tasklist\">Task list</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\"  to=\"modaldemo\">Demo of modal</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"datagriddemo\">Demo of data grid</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"bootstrapmodal\">Demo of Bootstrap modal</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n);\r\n    }\r\n}\r\n\r\nMyBootStrapNav.propTypes = {\r\n\r\n};\r\n\r\nexport default MyBootStrapNav;","import React, { Component } from 'react';\r\n\r\nclass MyBootStrapDemo extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state=\r\n        {\r\n            userName:\"Adam\",\r\n            todoItems:this.createStaticToDoItems(),\r\n            newItemText:\"\"\r\n        }\r\n        console.log(\"ctor of MyBootStrapDemo task list\")\r\n    }\r\n    changeStateData=()=>\r\n    {\r\n        console.log(\"click\")\r\n        this.setState({\r\n            userName:this.state.userName === \"Adam\"? \"Bob\":\"Adam\",\r\n            newItemText:\"\",\r\n        })\r\n    }\r\n    updateNewTextValue = (event)=>\r\n    {\r\n        console.log(\"Updated new text value\")\r\n        this.setState({newItemText:event.target.value});\r\n    }\r\n    createStaticToDoItems()\r\n    {\r\n        var items=[]\r\n        items.push({action:\"Buy flowers\", done:false});\r\n        items.push({action:\"Get shoes\", done:false});\r\n        items.push({action:\"Collect tickets\", done:true});\r\n        items.push({action:\"Call Joe\", done:false});\r\n        return items;\r\n    }\r\n    pendingTodoItems=()=>\r\n    {\r\n        console.log(\"Pending todo items\");\r\n        var allItems=this.state.todoItems;\r\n        var pendingItems=allItems.filter(t=>t.done);\r\n        return pendingItems;\r\n    }\r\n    OnCreateNewTodoClick=()=>\r\n    {\r\n        console.log(\"Add new item\");\r\n        if (!this.state.newItemText)\r\n        {\r\n            return;\r\n        }\r\n        var allItems=this.state.todoItems;\r\n        var existingItem=allItems.find(item=>item.action == this.state.newItemText);\r\n        if (existingItem!=null)\r\n        {\r\n            return;\r\n        }\r\n        var newItem={action:this.state.newItemText,done:false};\r\n        allItems.push(newItem);\r\n        this.setState({todoItems:allItems});\r\n        this.setState({newItemText:\"\"});\r\n    }\r\n    OnNewItemSubmit=(event)=>\r\n    {\r\n        console.log(\"OnNewItemSubmit\");\r\n        this.OnCreateNewTodoClick();\r\n        event.preventDefault();\r\n    }\r\n    OnDeleteClick=(todo)=>{\r\n        window.alert(`Click on button with task:${todo.action} `)\r\n    }\r\n    todoTableRows=()=>\r\n    {\r\n        var allItems=this.state.todoItems;\r\n        var tableRows=allItems.map(item=>\r\n            <tr key={item.action}>\r\n                <td>{item.action}</td>\r\n                <td>\r\n                    <input type=\"checkbox\" \r\n                    checked={item.done} \r\n                    onChange={()=>this.toggleTodo(item)}></input>\r\n                </td>\r\n                <td>\r\n                    <button className=\"btn btn-danger btn-sm\" onClick={()=>this.OnDeleteClick(item)}>Delete</button>\r\n                </td>\r\n            </tr>\r\n            );\r\n        return tableRows;\r\n    }\r\n    \r\n    toggleTodo=(todo)=>\r\n    {\r\n        console.log(`toggleTodo checkeditem=${todo.action}`);\r\n        var allItems=this.state.todoItems;\r\n        var existingItem=allItems.find(item=>item.action == todo.action);\r\n        if (existingItem==null)\r\n        {\r\n            return;\r\n        }\r\n        var newDone = !existingItem.done;\r\n        existingItem.done=newDone\r\n        this.setState({todoItems:allItems})\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log(\"render method of MyBootStrapDemo task list\")\r\n        return (\r\n\r\n            <div> \r\n                <h4 \r\n                    className=\"bg-primary text-white text-center\"> \r\n                        {this.state.userName}'s' To Do List &nbsp;&nbsp; {this.pendingTodoItems().length} items to do\r\n                </h4>\r\n                <div className=\"container-fluid\">\r\n                    <form className=\"form-inline\" onSubmit={this.OnNewItemSubmit}>\r\n                        <label htmlFor=\"newText\">New item:</label>\r\n                        <input \r\n                            id=\"newText\"\r\n                            className=\"form-control\" \r\n                            value={this.state.newItemText} onChange={this.updateNewTextValue}></input>\r\n\r\n                        <button type=\"button\"\r\n                            title=\"Add a new item to the list\"\r\n                            className=\"btn btn-primary m-1\"  onClick={this.OnCreateNewTodoClick}>Add</button>\r\n\r\n                        <button type=\"button\"\r\n                            className=\"btn btn-secondary  m-1\" \r\n                            onClick={this.changeStateData}\r\n                            title=\"Change name of the person\"\r\n                            >Change</button>\r\n\r\n                        <label>Display {this.state.todoItems.length} items</label>\r\n\r\n                    </form>\r\n\r\n                    <table className=\"table table-sm table-bordered table-striped \" >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Description</th>\r\n                                <th>Done</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.todoTableRows()}\r\n                        </tbody>\r\n                    </table>                    \r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyBootStrapDemo\r\n","import React, { Component } from 'react';\r\nimport MyBootStrapNav from \"./MyBootStrapNav\"\r\nimport MyBootStrapDemo  from \"./MyBootStrapDemo\"\r\n\r\nclass MyBootStrapLayout extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MyBootStrapNav></MyBootStrapNav>\r\n                <MyBootStrapDemo></MyBootStrapDemo>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyBootStrapLayout;","import React, { Component } from 'react';\r\nimport { DataGrid, ColDef } from '@material-ui/data-grid';\r\nimport \"./MyDataGrid.css\"\r\n\r\nconst rows = [\r\n    { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\r\n    { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\r\n    { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\r\n    { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\r\n    { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\r\n    { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\r\n    { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\r\n    { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\r\n    { id: 901, lastName: 'Roxie 901', firstName: 'Harvey', age: 65 },\r\n    { id: 902, lastName: 'Roxie 902', firstName: 'Harvey', age: 65 },\r\n    { id: 903, lastName: 'Roxie 903', firstName: 'Harvey', age: 65 },\r\n    { id: 904, lastName: 'Roxie 904', firstName: 'Harvey', age: 65 },\r\n    { id: 905, lastName: 'Roxie 905', firstName: 'Harvey', age: 65 },\r\n    { id: 906, lastName: 'Roxie 906', firstName: 'Harvey', age: 65 },\r\n    { id: 907, lastName: 'Roxie 907', firstName: 'Harvey', age: 65 },\r\n    { id: 908, lastName: 'Roxie 908', firstName: 'Harvey', age: 65 },\r\n    { id: 909, lastName: 'Roxie 909', firstName: 'Harvey', age: 65 },\r\n    { id: 910, lastName: 'Roxie 910', firstName: 'Harvey', age: 65 },\r\n    { id: 911, lastName: 'Roxie 911', firstName: 'Harvey', age: 65 },\r\n    { id: 912, lastName: 'Roxie 912', firstName: 'Harvey', age: 65 },\r\n  ];\r\n  \r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'firstName', headerName: 'First name', width: 130 },\r\n    { field: 'lastName', headerName: 'Last name', width: 130 },\r\n    {\r\n      field: 'age',\r\n      headerName: 'Age',\r\n      type: 'number',\r\n      width: 90,\r\n    },\r\n    {\r\n      field: 'fullName',\r\n      headerName: 'Full name',\r\n      description: 'This column has a value getter and is not sortable.',\r\n      sortable: false,\r\n      width: 160,\r\n      valueGetter: (params) =>\r\n        `${params.getValue('firstName') || ''} ${\r\n          params.getValue('lastName') || ''\r\n        }`,\r\n    },\r\n  ];\r\n\r\nclass MyDataGrid extends Component {    \r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"ctor of MyDataGrid\")\r\n        this.state=\r\n        {\r\n          selectedItems:[]\r\n        }\r\n        this.dummyRows=this.populateDummyRows(30);\r\n\r\n    }\r\n    populateDummyRows(rowCount)\r\n    {\r\n      let rows = [          \r\n        ]\r\n      \r\n        //{ id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 }\r\n      for(let index=0;index<rowCount;index++)\r\n      {\r\n        let newRow = \r\n        {\r\n          id: index, \r\n          lastName: `Snow ${index}`, \r\n          firstName: `Jon ${index}`, \r\n          age: 35 \r\n        }\r\n        rows.push(newRow);\r\n      }\r\n      return rows;\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n      return true;\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState) {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    onRowSelected(params)\r\n    {\r\n      console.log(`params:${params} this:${this}`)\r\n      let selectedRow=params.data;\r\n      let isSelected=params.isSelected;\r\n      let selectedItems=this.state.selectedItems;\r\n      if (isSelected === false)\r\n      {\r\n        //this.selectedItems.includes(selectedRow.id)\r\n        console.log(`Selected item ${selectedRow.id} will be removed` )\r\n        let index=selectedItems.indexOf(selectedRow.id)\r\n        selectedItems.splice(index,1);\r\n      }\r\n      else\r\n      {\r\n        console.log(`Selected item ${selectedRow.id} will be added` )\r\n        selectedItems.push(selectedRow.id);\r\n      }\r\n      \r\n      this.setState( state=>(\r\n        {\r\n          selectedItems:selectedItems\r\n        }));\r\n\r\n    }\r\n    OnShowSelectedItems()\r\n    {\r\n      let selectedItems=this.state.selectedItems;\r\n      let display=selectedItems;\r\n      alert(display);\r\n    }\r\n    GetDisplayOfSelectedItems()\r\n    {\r\n      return this.state.selectedItems.join();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>  Grid using Material grid </h1>\r\n                <div className=\"container-fluid\">\r\n                  <button className=\"btn btn-primary btn-sm\" onClick={()=>this.OnShowSelectedItems()}>Selected rows</button>\r\n                  <label className=\"m-2\">Count of selected items={this.state.selectedItems.length}</label>\r\n                  <label className=\"m-2\">The selected items are:{this.state.selectedItems.join()}</label>\r\n                </div>\r\n                <div style={{  width: '100%' }}>\r\n                    <DataGrid \r\n                      rows={this.dummyRows} columns={columns} pageSize={15}  \r\n                      rowsPerPageOptions={null} checkboxSelection={true}  autoHeight={true} rowHeight={30}\r\n                      onRowSelected={(retval)=>this.onRowSelected(retval)}\r\n                      />\r\n                </div>                \r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\n\r\nexport default MyDataGrid;","import React, { Component } from 'react';\r\nimport Modal from \"react-modal\"\r\n\r\nclass MyModalOkCancelDialog extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            isOpen:false\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps)\r\n    {\r\n        console.log(`did update old value:${prevProps.isOpen} , new value:${this.props.isOpen}`)\r\n        if (this.props.isOpen !== prevProps.isOpen)\r\n        {\r\n            this.setState({\r\n                    isOpen:true\r\n                }\r\n            );    \r\n        }\r\n    }\r\n\r\n    OnOkClick=()=>\r\n    {\r\n        this.ShowDialog(false);\r\n        if (this.props.onClose != null)\r\n        {\r\n            this.props.onClose(true);\r\n        }\r\n    }\r\n\r\n    OnCancelClick=()=>\r\n    {\r\n        this.ShowDialog(false);\r\n        if (this.props.onClose != null)\r\n        {\r\n            this.props.onClose(false);\r\n        }\r\n    }\r\n\r\n    ShowDialog(isVisible)\r\n    {\r\n        this.setState({\r\n            isOpen:isVisible\r\n        }\r\n    );    \r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>                                \r\n                <Modal isOpen={this.state.isOpen}>\r\n                    <h4>{this.props.title}</h4>\r\n                    <p>{this.props.text}</p>\r\n                    <div>\r\n                        <button type=\"button\" className=\"btn btn-primary m-1\" onClick={()=>this.OnOkClick()}>Ok</button>\r\n                        <button type=\"button\" className=\"btn btn-secondary m-1\" onClick={()=>this.OnCancelClick()}>Cancel</button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyModalOkCancelDialog;","import React, { Component } from 'react';\r\nimport Modal from \"react-modal\"\r\nimport MyModalOkCancelDialog from './MyModalOkCancelDialog'\r\n\r\nclass MyModalDemo extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state=\r\n        {\r\n            isModalOpen:false,\r\n            isOkCancelModalOpen:false\r\n        }\r\n    }\r\n\r\n    OnShowModalClick=()=>\r\n    {\r\n        const existingState=this.state.isModalOpen;\r\n        this.setState({\r\n            isModalOpen:!existingState\r\n        });\r\n    }\r\n\r\n    OnShowOkCancelReusableModalClick=()=>\r\n    {\r\n        this.setState({\r\n            isOkCancelModalOpen:!this.state.isOkCancelModalOpen\r\n        });\r\n    }\r\n\r\n    OnModalCloseClick=(retval)=>\r\n    {\r\n        this.setState({\r\n            isModalOpen:false\r\n        });\r\n        console.log(`Which button was click? Ok=${retval} Cancel=${!retval}`)\r\n\r\n    }\r\n\r\n    OnOkCancelModalDialogCloseCallBack=(retval)=>\r\n    {\r\n        console.log(`Ok Cancel dialog was closed. status=${retval} and this=${this}`);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Demo of modal</h1>\r\n                <button className=\"btn btn-primary btn-sm\" onClick={()=>this.OnShowModalClick()}>Show me a modal</button>\r\n                <button className=\"btn btn-secondary btn-sm\" onClick={()=>this.OnShowOkCancelReusableModalClick()}>Show me a reusable Ok Cancel modal dialog</button>\r\n                \r\n                <Modal isOpen={this.state.isModalOpen}>\r\n                    <h3>Some modal dialog</h3>\r\n                    <p>contents of the modal</p>\r\n                    <button className=\"btn btn-sm btn-primary m-1\" onClick={()=>this.OnModalCloseClick(true)}>Ok</button>\r\n                    <button className=\"btn btn-sm btn-primary m-1\" onClick={()=>this.OnModalCloseClick(false)}>Cancel</button>\r\n                </Modal>\r\n                <MyModalOkCancelDialog \r\n                    title=\"My alert title\" text=\"This is my alert text\" \r\n                    onClose={(retval)=>this.OnOkCancelModalDialogCloseCallBack(retval)}\r\n                    isOpen={this.state.isOkCancelModalOpen}></MyModalOkCancelDialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default MyModalDemo;","import React, { Component } from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nclass BootstrapModal extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state={ isOpen:false};\r\n        this.state={ isGridModalOpen:false};\r\n    }\r\n    OnShowSimpleModalClick=()=>\r\n    {\r\n        this.setState({isOpen:true})\r\n    }\r\n    OnShowGridLayoutModalClick=()=>\r\n    {\r\n        this.setState({isGridModalOpen:true})\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>bootstrap modal comes here</h1>\r\n                <button onClick={this.OnShowSimpleModalClick}>Show me a simplemodal</button>\r\n                <button onClick={this.OnShowGridLayoutModalClick}>Show me a modal with Grid layout</button>\r\n                <Modal show={this.state.isOpen}>\r\n                    <Modal.Header>\r\n                        <Modal.Title>Modal title</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p>This is the body</p>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\">Close</Button>\r\n                        <Button variant=\"primary\">Save changes</Button>                        \r\n                    </Modal.Footer>\r\n                </Modal> \r\n\r\n                <Modal  aria-labelledby=\"contained-modal-title-vcenter\"  show={this.state.isGridModalOpen}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Using Grid in Modal\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body className=\"show-grid\">\r\n                        <Container>\r\n                        <Row>\r\n                            <Col xs={12} md={8}>\r\n                            .col-xs-12 .col-md-8\r\n                            </Col>\r\n                            <Col xs={6} md={4}>\r\n                            .col-xs-6 .col-md-4\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col xs={6} md={4}>\r\n                            .col-xs-6 .col-md-4\r\n                            </Col>\r\n                            <Col xs={6} md={4}>\r\n                            .col-xs-6 .col-md-4\r\n                            </Col>\r\n                            <Col xs={6} md={4}>\r\n                            .col-xs-6 .col-md-4\r\n                            </Col>\r\n                        </Row>\r\n                        </Container>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>                               \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BootstrapModal;","import React,{useState} from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n/*\r\n\r\nWhat are we trying to do?\r\n--------------------------\r\n- Create BS nav-link from an array of objects\r\n- In this example we are using the NavLink to render the active link\r\n */\r\nconst MyBootstrapNavWithNavLink = () => {\r\n    const [activeLink, setActiveLink]=useState(\"taskList\")\r\n    const links=[\r\n        {\"title\":\"Task list\", to:\"tasklist\"},\r\n        {\"title\":\"Demo of modal\", to:\"modaldemo\"},\r\n        {\"title\":\"Demo of data grid\", to:\"datagriddemo\"},\r\n        {\"title\":\"Demo of Bootstrap modal\", to:\"bootstrapmodal\"},\r\n        {\"title\":\"Demo of Up/Down counter\", to:\"updowncounter\"}\r\n    ]\r\n    function  onLinkClick(e)\r\n    {\r\n        console.log(`On link click ${e.target}`)\r\n        setActiveLink(e.target.href);\r\n    }\r\n    function  renderLinks()\r\n    {\r\n        links.forEach((linkItem,index)=>{\r\n            renderNavLink(linkItem)\r\n        })\r\n\r\n        return <h2>Blah1</h2>\r\n    }\r\n    function renderNavLink(linkItem)\r\n    {\r\n        console.log((`Inside renderlink ${linkItem}`))\r\n        let linkClassName=\"nav-link\";\r\n        let linkActiveClassName=\"nav-link active\";\r\n        return (\r\n            <li className=\"nav-item \">\r\n                <NavLink className={linkClassName} to={linkItem.to}  activeClassName={linkActiveClassName} >{linkItem.title}</NavLink>\r\n            </li>\r\n        )\r\n\r\n    }\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <a className=\"navbar-brand\" to=\"/\">My company</a>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n                {\r\n                    links.map(linkItem=>renderNavLink(linkItem))\r\n                }\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default MyBootstrapNavWithNavLink;","import React, {useState} from 'react';\r\n\r\nconst UpDownCounter = (props) => {\r\n    let initialValue = props.initialValue??0;\r\n    const [counter, setCounter]=useState(initialValue)\r\n    return (\r\n        <div>\r\n            <form className=\"form-inline\">\r\n                <button className={\"btn btn-primary\"} onClick={()=>setCounter(counter+1)} data-testid={\"upbutton\"}>Up</button>\r\n                <div>\r\n                    Value of counter is <strong data-testid={\"display\"}>{counter}</strong>\r\n                </div>\r\n                <button className={\"btn btn-primary\"} onClick={()=>setCounter(counter-1)} data-testid={\"downbutton\"}>Down</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpDownCounter;","import React, { Component } from 'react'\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport SampleComponent from './components/SampleComponent'\r\nimport SampleComponentCreateElement from \"./components/SampleComponentCreateElement\"\r\nimport SampleWithProps from \"./components/SampleWithProps\"\r\nimport ClickCounter from \"./components/ClickCounter\"\r\n\r\nimport MyBootStrapNav from \"./components/MyBootStrapNav\"\r\nimport MyBootStrapLayout from  \"./components/MyBootStrapLayout\"\r\n\r\nimport MyBootStrapDemo from  \"./components/MyBootStrapDemo\"\r\nimport MyDataGrid from  \"./components/MyDataGrid\"\r\nimport MyModalDemo from  \"./components/MyModalDemo\"\r\nimport BootstrapModal from \"./components/BootstrapModal\"\r\nimport  MyBootstrapNavIntelligent from \"./components/MyBootstrapNavIntelligent\"\r\nimport  MyBootstrapNavWithNavLink from \"./components/MyBootstrapNavWithNavLink\"\r\nimport UpDownCounter from \"./components/UpDownCounter\";\r\n\r\nimport {\r\n  HashRouter,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  BrowserRouter\r\n} from \"react-router-dom\";\r\n\r\n\r\nclass App extends Component\r\n{\r\n  render()\r\n  {\r\n\r\n  return( \r\n      <HashRouter>\r\n        <MyBootstrapNavWithNavLink></MyBootstrapNavWithNavLink>\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <MyBootStrapDemo></MyBootStrapDemo>\r\n          </Route>\r\n          <Route path=\"/tasklist\">\r\n            <MyBootStrapDemo></MyBootStrapDemo>\r\n          </Route>\r\n          <Route path=\"/modaldemo\" >\r\n            <MyModalDemo></MyModalDemo>\r\n          </Route>\r\n          <Route path=\"/datagriddemo\" >\r\n            <MyDataGrid></MyDataGrid>\r\n          </Route>\r\n          <Route path=\"/bootstrapmodal\" >\r\n            <BootstrapModal></BootstrapModal>\r\n          </Route>\r\n          <Route path=\"/updowncounter\" >\r\n            <UpDownCounter></UpDownCounter>\r\n          </Route>\r\n        </Switch>\r\n    </HashRouter>);    \r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n//import * as serviceWorker from './serviceWorker'; \r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}