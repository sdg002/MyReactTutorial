{"version":3,"sources":["logo.svg","components/InnerComponent.js","components/OuterComponent.js","components/Clock.js","components/Clock2.js","App.js","reportWebVitals.js","index.js"],"names":["InnerComponent","props","onClick","clickHandler","firstName","OuterComponent","className","alert","Clock","rc","currentTime","setTime","currentClockInterval","setClockInterval","isClockEnabled","enableClock","console","log","startClockHandler","stopClockHandler","timeCallBack","Date","clockInterval","setInterval","clearInterval","toISOString","disabled","Clock2","javascriptClockIntervalObject","setJavascriptClockIntervalObject","windowClock","style","backgroundColor","App","basename","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4aa0ab2d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function InnerComponent(props)\r\n{\r\n    const clickHandler=()=>{\r\n        alert(\"click \")\r\n    }\r\n    return <div>\r\n        <button onClick={props.clickHandler}>Button inside inner compnent. Click me {props.firstName}</button>\r\n    </div>\r\n}\r\n\r\nexport default InnerComponent;","import React from 'react';\r\nimport InnerComponent from './InnerComponent';\r\n\r\nconst OuterComponent = () => {\r\n    const outerClickHandler=()=>{\r\n        alert(\"click in outer handler\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"mypanel\">\r\n            <div className=\"titlebar\">Demonstrates wrapping up an inner component and handling clicks in the outside component</div>\r\n            <h1>This is outer component</h1>\r\n            <br></br>\r\n            <InnerComponent firstName=\"Cool from outer\" clickHandler={outerClickHandler}></InnerComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OuterComponent;","import * as rc from 'react';\r\n\r\nconst clockIntervalMs=1000; //ms\r\n\r\nconst Clock = () => {\r\n    const [currentTime,setTime]=rc.useState(null)\r\n    const [currentClockInterval,setClockInterval]=rc.useState(null)\r\n    const [isClockEnabled,enableClock]=rc.useState(false)\r\n\r\n    console.log(`inside clock component, current time is `)\r\n    let startClockHandler=null;\r\n    let stopClockHandler=null;\r\n\r\n    const timeCallBack=()=>{\r\n        let currentTime=new Date();\r\n        console.log(`Inside time, time=${currentTime}`)\r\n        setTime(currentTime)\r\n    }\r\n\r\n    rc.useEffect(()=>{\r\n        /*\r\n        if (currentTime == null){\r\n            console.log(\"Setting the clock first time\")\r\n            setTime(new Date())\r\n            let clockInterval=setInterval(timeCallBack,clockIntervalMs);\r\n            console.log(`Got an interval object ${clockInterval}`)\r\n            setClockInterval(clockInterval)\r\n        }\r\n        else{\r\n            console.log(\"Clock is already set\")\r\n        } \r\n        */\r\n       console.log(`Inside useEffect, ${isClockEnabled}`)\r\n       if (!isClockEnabled)\r\n       {\r\n           console.log(\"Already enabled, quitting\")\r\n           return;\r\n       }\r\n\r\n       if (currentClockInterval!=null){\r\n           console.log(\"Not setting a new clock\")\r\n           return;\r\n       }\r\n\r\n        let clockInterval=setInterval(timeCallBack,clockIntervalMs);\r\n        console.log(`Created a new interval object ${clockInterval}`)\r\n        setClockInterval(clockInterval)\r\n    })\r\n\r\n\r\n    stopClockHandler=()=>{\r\n        console.log(`inside stop handler click ${currentClockInterval}`)\r\n        clearInterval(currentClockInterval)\r\n        enableClock(false)\r\n        setClockInterval(null)\r\n    }\r\n\r\n    startClockHandler=()=>{\r\n        console.log(`inside start handler click ${currentClockInterval}`)\r\n        enableClock(true)\r\n    }\r\n\r\n    return (\r\n        <div className=\"mypanel\">\r\n            <div className=\"titlebar\">CLOCK1:This is a basic clock, see how we use useState to and useEffect</div>\r\n           <div>\r\n           My clock , current time is {currentTime?.toISOString()}\r\n           </div>\r\n           <button onClick={stopClockHandler} disabled={!isClockEnabled}>Stop clock</button>\r\n           <button onClick={startClockHandler} disabled={isClockEnabled}>Start clock</button>\r\n           \r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Clock;","import * as rc from 'react';\r\n\r\nconst clockIntervalMs=1000; //ms\r\n\r\n\r\nconst Clock2 = () => {\r\n    const clockStyle={ backgroundColor:\"ghostwhite\"}\r\n    const [currentTime,setTime]=rc.useState(null)\r\n    const [isInitialized,setIsInitialized]=rc.useState(false)\r\n    const [javascriptClockIntervalObject,setJavascriptClockIntervalObject]=rc.useState(null)\r\n\r\n    let startClockHandler=null;\r\n    let stopClockHandler=null;\r\n\r\n    rc.useEffect(()=>{\r\n        console.log(`CLOCK2:Inside dummy useEffect window clock=${javascriptClockIntervalObject}`)\r\n    });\r\n\r\n    const onloadHandler=()=>{\r\n        console.log(\"CLOCK2: onLoadHandler\");\r\n        startClockHandler();\r\n    }\r\n    rc.useEffect(onloadHandler,[]);\r\n    //https://stackoverflow.com/questions/53120972/how-to-call-loading-function-with-react-useeffect-only-once\r\n\r\n\r\n    stopClockHandler=()=>{\r\n        console.log(`CLOCK2:inside stop handler click ${javascriptClockIntervalObject}`)\r\n        clearInterval(javascriptClockIntervalObject)\r\n        setJavascriptClockIntervalObject(null)\r\n    }\r\n\r\n    startClockHandler=()=>{\r\n        console.log(`CLOCK2:inside start handler click ${javascriptClockIntervalObject}`)\r\n        let windowClock=setInterval(timeCallBack,clockIntervalMs);\r\n        setJavascriptClockIntervalObject(windowClock)\r\n    }\r\n\r\n    const timeCallBack=()=>{\r\n        let currentTime=new Date();\r\n        console.log(`Inside windows timer call back, time=${currentTime}`)\r\n        setTime(currentTime)\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={clockStyle} className=\"mypanel\">\r\n            <div className=\"titlebar\">CLOCK2:This is a simpler implementation. We are only using the state to store for storing the setInterval</div>\r\n            <div>\r\n                New clock, current time is <strong>{currentTime?.toISOString()}</strong>\r\n            </div>\r\n            <div>\r\n                <button onClick={stopClockHandler} disabled={javascriptClockIntervalObject==null}>Stop clock</button>\r\n                <button onClick={startClockHandler} disabled={javascriptClockIntervalObject!=null}>Start clock</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Clock2;","import logo from './logo.svg';\nimport './App.css';\nimport InnerComponent  from './components/InnerComponent';\nimport OuterComponent  from './components/OuterComponent';\nimport Clock from './components/Clock'\nimport Clock2 from './components/Clock2'\nimport {Route,Routes ,BrowserRouter as Router} from 'react-router-dom'\n\n\n\n\n\n\n\n\nfunction App() {\n  \n  const ClockLayout = () => {\n    return (\n      <div>\n        <Clock></Clock>\n        <hr/>\n        <Clock2></Clock2>\n        <hr/>\n        <OuterComponent></OuterComponent>\n      </div>\n    );\n  };\n  \n\n  return (\n    <Router basename=\"/MyReactTutorial/static/simple-clock-high-order\">\n      <Routes>\n        <Route path=\"/\" element={ClockLayout()}>\n        </Route>\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './mystyles.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <InnerComponent firstName=\"john doe\"></InnerComponent> */}\n    <App></App>    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}